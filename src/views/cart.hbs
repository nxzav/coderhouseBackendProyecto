<div class="cart">
  <h3 class="cart--title">
    Shopping cart
    <br/>
    <span class="cart--id">{{cart._id}}</span>
  </h3>
  {{#each cart.products}}
  <div class="cart--card">
    <img class="cart--card__product-image" src="{{product.thumbnails}}" alt="">
    <div class="cart--card__info">
      <span><b>{{product.title}}</b></span>
      <span>{{product.description}}</span>
      <span>Code: {{product.code}}</span>
      <span>Stock: {{product.stock}}</span>
      <button class="remove-btn" data-id="{{product._id}}">
        Remove item
      </button>
    </div>
    <div class="cart--card__info">
      <span><b>Price: ${{product.price}}</b></span>
      <span><b>Qty: {{quantity}}</b></span>
    </div>
  </div>
  {{/each}}
  <h2 class="cart--price">Total: ${{cartTotal}}</h2>
  <button id="checkout-btn" class="purchase-btn">CHECKOUT</button>
  <div id="wallet_container"></div>
  {{!-- <button class="cart__btn" id="deleteCart">Clear cart</button> --}}
</div>

<script src="https://sdk.mercadopago.com/js/v2"></script>
<script>
  const mp = new MercadoPago('TEST-6e868261-2f1e-41bd-8b3f-35cd4eff749d');
  const checkoutBtn = document.querySelector('#checkout-btn');
  const removeBtn = document.querySelectorAll('.remove-btn');

  function createCheckoutButton(preferenceId) {
    const bricksBuilder = mp.bricks();
    const renderComponent = async () => {
      if (window.paymentBrickController) window.paymentBrickController.unmount();
      window.paymentBrickController = await bricksBuilder.create('wallet', 'wallet_container', {
        initialization: {
          preferenceId: preferenceId,
        },
      });
    };
    renderComponent();
  }

  checkoutBtn.addEventListener('click', async () => {
    try {
      const cid = '{{cart._id}}';
      const orderData = {
        title: 'MyTechStore order',
        quantity: 1,
        price: Number('{{cartTotal}}'),
      }

      const response = await fetch(`/api/payment/create-preference`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(orderData),
      });

      const preference = await response.json();
      createCheckoutButton(preference.id);
    } catch (error) {
      alert('Checkout error: ', error);
    }
  });

  removeBtn.forEach((e) => e.addEventListener('click', () => {
    const pid = e.dataset.id;
    const cid = '{{cart._id}}';

    fetch(`/api/carts/${cid}/product/${pid}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
      },
    })
      .then((res) => res.json())
      .then((data) => console.log(data))
      .then(() => location.reload())
      .catch((e) => console.log('Error:', e));
    Swal.fire({
      position: 'top-end',
      icon: 'success',
      title: 'Product deleted from cart',
      showConfirmButton: false,
      timer: 1000,
    });
  }));
</script>