paths:
  /api/products:
    get:
      summary: Get products
      description: Retrieve a paginated list of products using query params
      tags:
        - Products
      responses:
        '200':
          description: Get products success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
    post:
      summary: Post product
      description: Register product using request body
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/postProduct'
      responses:
        '200':
          description: Product registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    $ref: '#/components/requestBodies/postProduct'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '409':
          description: Product code already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
  /api/products/{pid}:
    get:
      summary: Get product
      description: Retrieve a specific product using product id
      parameters:
        - $ref: '#/components/parameters/PidParam'
      tags:
        - Products
      responses:
        '200':
          description: Get product success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
    put:
      summary: Update product
      description: Update a specific product using product id
      parameters:
        - $ref: '#/components/parameters/PidParam'
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/postProduct'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
    delete:
      summary: Delete product
      description: Delete a specific product using product id
      parameters:
        - $ref: '#/components/parameters/PidParam'
      tags:
        - Products
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  msg:
                    type: string
                  result:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
  /api/carts/:
    get:
      summary: Get all carts
      description: Retrieve a list of ecommerce carts
      tags:
        - Carts
      responses:
        '200':
          description: Get carts success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  msg:
                    type: string
                  carts:
                    $ref: '#/components/schemas/Cart'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
    post:
      summary: Create cart
      description: Create a cart
      tags:
        - Carts
      responses:
        '200':
          description: Cart created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    description: Cart ID
                    type: string
                  products:
                    description: Cart product list
                    type: array
                    items:
                      type: object
                      properties:
                        product:
                          type: object
                          description: Product in cart
                        quantity:
                          type: number
                          description: Quantity of product in cart
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
  /api/carts/{cid}:
    get:
      summary: Get cart
      description: Retrieve a specific cart using cart id
      parameters:
        - $ref: '#/components/parameters/CidParam'
      tags:
        - Carts
      responses:
        '200':
          description: Get cart success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Cart does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
    delete:
      summary: Delete cart
      description: Delete a specific cart using cart id
      parameters:
        - $ref: '#/components/parameters/CidParam'
      tags:
        - Carts
      responses:
        '200':
          description: Cart deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  cart:
                    $ref: '#/components/schemas/Cart'
        '404':
          description: Cart does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
  /api/carts/{cid}/product/{pid}:
    post:
      summary: Add product in cart
      description: Add a product to a specific cart using cart id and product id
      parameters:
        - $ref: '#/components/parameters/CidParam'
        - $ref: '#/components/parameters/PidParam'
      tags:
        - Carts
      responses:
        '200':
          description: Product added in cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    $ref: '#/components/schemas/Cart'
        '400':
          description: Product can not be added
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '404':
          description: Cart does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
    put:
      summary: Update product in cart
      description: Update product quantity in a specific cart using cart id and product id
      parameters:
        - $ref: '#/components/parameters/CidParam'
        - $ref: '#/components/parameters/PidParam'
      tags:
        - Carts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
      responses:
        '200':
          description: Product in cart updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    $ref: '#/components/schemas/Cart'
        '400':
          description: Product can not be updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '404':
          description: Cart does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
    delete:
      summary: Delete product in cart
      description: Delete a product from a specific cart using cart id and product id
      parameters:
        - $ref: '#/components/parameters/CidParam'
        - $ref: '#/components/parameters/PidParam'
      tags:
        - Carts
      responses:
        '200':
          description: Product in cart deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: Cart ID
                        default: ObjectId('65d846a95a8c5a55a1a4f53c')
                      products:
                        type: array
                        description: Product list
        '400':
          description: Product can not be deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '404':
          description: Cart does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
  /api/carts/{cid}/purchase:
    post:
      summary: Complete cart purchase
      description: Complete cart purchase using cart ID
      parameters:
        - $ref: '#/components/parameters/CidParam'
      tags:
        - Carts
      responses:
        '200':
          description: Purchase completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  ticket:
                    type: object
                    properties:
                      code:
                        type: string
                        description: Ticket code
                      client:
                        type: string
                        description: Purchaser ID
                      items:
                        type: array
                        description: Items in purchased cart
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            price:
                              type: number
                            quantity:
                              type: number
                            total:
                              type: number
                      amount:
                        type: number
                        description: Total price
        '400':
          description: Empty cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '404':
          description: Cart does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  msg:
                    type: string

components:
  parameters:
    PidParam:
      name: pid
      in: path
      schema:
        type: string
      required: true
      description: ID of the product
    CidParam:
      name: cid
      in: path
      schema:
        type: string
      required: true
      description: ID of the cart
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
          default: ObjectId('65d846a95a8c5a55a1a4f53c')
          description: Cart ID
        products:
          description: Cart product list
          type: array
          items:
            type: object
            properties:
              product:
                $ref: '#/components/schemas/Product'
              quantity:
                type: number
                description: Quantity of product in cart
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Product ID
        title:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        code:
          type: string
          description: Product code
        price:
          type: number
          description: Product price
        status:
          type: boolean
          description: Product status
        stock:
          type: number
          description: Product stock
        category:
          type: string
          description: Product category
        thumbnails:
          type: array
          description: Product thumbnails
      example:
        _id: ObjectId('65b8bc11be19398e932b4b88')
        title: Monitor ViewSonic
        description: 27 pulgadas IPS
        code: VX2776-SMHD1
        price: 160
        status: true
        stock: 10
        category: monitors
        thumbnails:
          [
            'https://www.cyberpuerta.mx/img/product/XL/CP-VIEWSONIC-VX2776-SMHD-1.jpg',
          ]
  requestBodies:
    postProduct:
      type: object
      properties:
        title:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        code:
          type: string
          description: Product code
        price:
          type: number
          description: Product price
        status:
          type: boolean
          description: Product status
        stock:
          type: number
          description: Product stock
        category:
          type: string
          description: Product category
        thumbnails:
          type: array
          description: Product thumbnails
# first_name
# last_name
# email
# password
# confirmPassword
